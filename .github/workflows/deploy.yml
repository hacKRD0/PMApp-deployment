name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Node.js locally on GitHub Actions to run the decryption script if needed
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Generate environment variables file
        run: node generate-vars.js "${{ secrets.ENV_VARIABLES_BACKEND }}"
      
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          # Install Node.js on EC2 instance using NVM if not installed
          if ! command -v node &> /dev/null; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            nvm install 20
          fi

          # Ensure pmapp directory exists
          mkdir -p ~/pmapp
          
          # Log in to Docker
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          
          # Navigate to directory where docker-compose.yml is located
          cd ~/pmapp

          # Pull latest images and run docker-compose
          docker-compose down       # Stop existing containers
          docker-compose pull       # Pull the latest images from Docker Hub
          docker-compose up -d      # Start containers in detached mode
